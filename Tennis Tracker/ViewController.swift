//
//  ViewController.swift
//  Tennis Tracker
//
//  Created by Andy Dvoytsov on 18.04.2023.
//

import UIKit

class ViewController: UIViewController, UITextFieldDelegate {
    
    let GamePoints = ["0", "15", "30", "40", "AD", "0"] // —Å—á–µ—Ç
    let MaxGame = 6 // –∏–≥—Ä–∞ –¥–æ 6 –≥–µ–π–º–æ–≤ –≤ —Å—ç—Ç–µ
    
    var MaxPoint: Int = 4 // –¥–æ 4-—Ö –æ—á–∫–æ–≤ –≤ –≥–µ–π–º–µ 0/15/30/40
    var Podacha: Int = 1 // –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –ø–æ–¥–∞—á–∞ 1-—è/2-—è
    var PodaetNow: Int = 1 // –∫—Ç–æ —Å–µ–π—á–∞—Å –ø–æ–¥–∞–µ—Ç 1/2 –∏–≥—Ä–æ–∫
    var player1point: Int = 0 // –æ—á–∫–∏ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    var player2point: Int = 0 // –æ—á–∫–∏ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    var player1game: Int = 0 // –≥–µ–π–º—ã 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    var player2game: Int = 0 // –≥–µ–π–º—ã 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    var player1set: Int = 0 // —Å—ç—Ç—ã 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    var player2set: Int = 0 // —Å—ç—Ç—ã 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    var TieBreak7: Bool = false // –∏–¥–µ—Ç –ª–∏ —Å–µ–π—á–∞—Å —Ç–∞–π–±—Ä–µ–π–∫ –≤ —Å—ç—Ç–µ
    
    @IBOutlet weak var TurnirTextField: UITextField! // –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
    @IBOutlet weak var FirstPlayerNameTextField: UITextField! // –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var SecondPlayerNameTextField: UITextField! // –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    
    @IBOutlet weak var Win1Button: UIButton! // –∫–Ω–æ–ø–∫–∞ –ø–æ–±–µ–¥—ã 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Lose1Button: UIButton! // –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Win2Button: UIButton! // –∫–Ω–æ–ø–∫–∞ –ø–æ–±–µ–¥—ã 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Lose2Button: UIButton! // –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    
    @IBOutlet weak var Set1Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ç–æ–≤ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Set2Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ç–æ–≤ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Game1Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–π–º–æ–≤ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Game2Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–π–º–æ–≤ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Point1Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var Point2Label: UILabel! // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var ScoreLabel: UILabel! // –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—á–∫–æ–≤ 0/15/30/40 –∏–ª–∏ —Ç–∞–π–±—Ä–µ–π–∫–∞
    @IBOutlet weak var FirstPlayerStatusLabel: UILabel! // –ø–æ–¥–∞—á–∞ –∏–ª–∏ –ø—Ä–∏–µ–º —É 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var SecondPlayerStetusLabel: UILabel! // –∏ —É –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var BallLabel: UILabel! // –æ–¥–∏–Ω –∏–ª–∏ –¥–≤–∞ –º—è—á–∏–∫–∞ - –Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–¥–∞—á–∏
    
    @IBOutlet weak var FirstPlayerImage: UIImageView! // –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
    @IBOutlet weak var SecondPlayerImage: UIImageView! // –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
    
    func SmenaPodachi () { // –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–¥–∞—á–∏
        switch PodaetNow {
        case 1: do {
            BallLabel.frame.origin.x = Point1Label.frame.origin.x + Point1Label.frame.width - 30
            FirstPlayerStatusLabel.text = String(Podacha)+" –ø–æ–¥–∞—á–∞"
            SecondPlayerStetusLabel.text = "–ü—Ä–∏–µ–º"
            Win1Button.setTitle("–≠–π—Å", for: .normal)
            Win2Button.setTitle("–í–∏–Ω–Ω–µ—Ä", for: .normal)
            FirstPlayerImage.image = UIImage(named: "img_serve_left")
            SecondPlayerImage.image = UIImage(named: "img_return_right")
        }
        case 2: do {
            BallLabel.frame.origin.x = Point2Label.frame.origin.x
            SecondPlayerStetusLabel.text = String(Podacha)+" –ø–æ–¥–∞—á–∞"
            FirstPlayerStatusLabel.text = "–ü—Ä–∏–µ–º"
            Win2Button.setTitle("–≠–π—Å", for: .normal)
            Win1Button.setTitle("–í–∏–Ω–Ω–µ—Ä", for: .normal)
            SecondPlayerImage.image = UIImage(named: "img_serve_right")
            FirstPlayerImage.image = UIImage(named: "img_return_left")
        }
        default: BallLabel.frame.origin.x = Point1Label.frame.origin.x
        }
    }
    
    func ChangeGames( g1: Int, g2: Int) { // g1, g2 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–µ–π–º–æ–≤ 1-–≥–æ –∏ 2-–≥–æ –∏–≥—Ä–æ–∫–æ–≤
        // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –≥–µ–π–º–æ–≤
        player1game = player1game + g1
        player2game = player2game + g2
        if (PodaetNow == 1) { PodaetNow = 2}
        else { PodaetNow = 1} // —Å–º–µ–Ω–∞ –ø–æ–¥–∞—á–∏
        SmenaPodachi()
        
        if (player1game>=MaxGame)&&(player1game - player2game >= 2) {
            // –∏–≥—Ä–æ–∫ 1 –Ω–∞–±—Ä–∞–ª 6 –∏–ª–∏ –±–æ–ª—å—à–µ –≥–µ–π–º–æ–≤ —Å —Ä–∞–∑–Ω–∏—Ü–µ–π –≤ 2 –≥–µ–π–º–∞
            player1set+=1
            player1game = 0
            player2game = 0
        }
        if (player2game>=MaxGame)&&(player2game - player1game >= 2) {
            // –∏–≥—Ä–æ–∫ 2 –Ω–∞–±—Ä–∞–ª 6 –∏–ª–∏ –±–æ–ª—å—à–µ –≥–µ–π–º–æ–≤ —Å —Ä–∞–∑–Ω–∏—Ü–µ–π –≤ 2 –≥–µ–π–º–∞
            player2set+=1
            player1game = 0
            player2game = 0
        }
        if (player1game == MaxGame) && (player2game == MaxGame) {
            // –ø—Ä–∏ —Å—á–µ—Ç–µ 6:6 –ø–æ —Å—ç—Ç–∞–º –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–∞–π–±—Ä–µ–π–∫
            TieBreak7 = true
            ScoreLabel.text = "–¢–ë(7)"
            MaxPoint = 7 // –¥–æ 7 –æ—á–∫–æ–≤ —Ç–∞–π–±—Ä–µ–π–∫
        }
        if (player1game + player2game == 2 * MaxGame + 1) {
            // –ø—Ä–∏ —Å—á–µ—Ç–µ 7:6 –∏–ª–∏ 6:7 –ø–æ —Å—ç—Ç–∞–º –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ç–∞–π–±—Ä–µ–π–∫
            TieBreak7 = false
            ScoreLabel.text = "–û—á–∫–∏"
            MaxPoint = 4 // –¥–æ 4-—Ö –æ—á–∫–æ–≤ –≥–µ–π–º 0/15/30/40
            player1set = player1set + (player1game - MaxGame)
            player2set = player2set + (player2game - MaxGame)
            player1game = 0
            player2game = 0
        }
    }
    
    func ChangePoints( p1: Int, p2 : Int) { // p1, p2 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—á–∫–æ–≤ 1-–≥–æ –∏ 2-–≥–æ –∏–≥—Ä–æ–∫–æ–≤
        // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Å—á–µ—Ç–∞
        player1point = player1point + p1
        player2point = player2point + p2
        Podacha = 1 // —Å–Ω–æ–≤–∞ –ø–µ—Ä–≤–∞—è –ø–æ–¥–∞—á–∞
        
        if (player1point >= MaxPoint)&&(player1point - player2point >= 2) { // –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ 1 –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ 40 –æ—á–∫–æ–≤, –∞ —É 2-–≥–æ –º–µ–Ω—å—à–µ 30 —Ç–æ
            ChangeGames(g1: 1, g2: 0) // –∏–≥—Ä–æ–∫ 1 –≤—ã–∏–≥—Ä–∞–ª +1 –≥–µ–π–º
            player1point = 0 // –æ–±–Ω—É–ª—è–µ–º –æ—á–∫–∏ 1-–≥–æ
            player2point = 0 // –∏ 2-–≥–æ –∏–≥—Ä–æ–∫–æ–≤ —á—Ç–æ–± —Å–ª–µ–¥—É—é—â–∏–π –≥–Ω–µ–π–º –Ω–∞—á–∞–ª—Å—è —Å –Ω—É–ª—è
        }
        
        if (player2point >= MaxPoint)&&(player2point - player1point >= 2) { // –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ 2 –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ 40 –æ—á–∫–æ–≤, –∞ —É 1-–≥–æ –º–µ–Ω—å—à–µ 30 —Ç–æ
            ChangeGames(g1: 0, g2: 1) // –∏–≥—Ä–æ–∫ 1 –≤—ã–∏–≥—Ä–∞–ª +1 –≥–µ–π–º
            player1point = 0 // –æ–±–Ω—É–ª—è–µ–º –æ—á–∫–∏ 1-–≥–æ
            player2point = 0 // –∏ 2-–≥–æ –∏–≥—Ä–æ–∫–æ–≤ —á—Ç–æ–± —Å–ª–µ–¥—É—é—â–∏–π –≥–Ω–µ–π–º –Ω–∞—á–∞–ª—Å—è —Å –Ω—É–ª—è
        }
        
        if (player1point == MaxPoint)&&(player2point == MaxPoint)&&(TieBreak7 == false) { // –µ—Å–ª–∏ –Ω–µ —Ç–∞–π–±—Ä–µ–π–∫, —É –∫–æ–≥–æ —Ç–æ –±—ã–ª–æ –±–æ–ª—å—à–µ –∏ –æ–Ω –ø—Ä–æ–∏–≥—Ä–∞–ª –æ—á–∫–æ, —Ç–æ —Å—á–µ—Ç 40:40
            player1point = 3
            player2point = 3
        }
    }
    
    func UpdatePoints() {
        // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ç–µ–∫—É—â–∏–µ –æ—á–∫–∏, –≥–µ–π–º—ã, —Å—ç—Ç—ã
        if TieBreak7 {
            Point1Label.text = String(player1point)
            Point2Label.text = String(player2point)
        } else {
            Point1Label.text = GamePoints[player1point]
            Point2Label.text = GamePoints[player2point]
        }
        Game1Label.text = String(player1game)
        Game2Label.text = String(player2game)
        Set1Label.text = String(player1set)
        Set2Label.text = String(player2set)
        switch Podacha { // –∫–∞–∫–∞—è –ø–æ–¥–∞—á–∞ (1/2) - —Å—Ç–æ–ª—å–∫–æ –∏ –º—è—á–∏–∫–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        case 1: BallLabel.text = "üéæ"
        case 2: BallLabel.text = "üéæüéæ"
        default: BallLabel.text = ""
        }
        
        switch PodaetNow { // —á—å—è –ø–æ–¥–∞—á–∞ - —Ç–æ–º—É –∏ —Ä–∏—Å—É–µ–º –º—è—á–∏–∫–∏
        case 1: do {
        //   BallLabel.frame.origin.x = Point1Label.frame.origin.x + Point1Label.frame.width - 30
            FirstPlayerStatusLabel.text = String(Podacha)+" –ø–æ–¥–∞—á–∞"
        //    SecondPlayerStetusLabel.text = "–ü—Ä–∏–µ–º"
        //    Win1Button.setTitle("–≠–π—Å", for: .normal)
        //    Win2Button.setTitle("–í–∏–Ω–Ω–µ—Ä", for: .normal)
        //    FirstPlayerImage.image = UIImage(named: "img_serve_left")
        //    SecondPlayerImage.image = UIImage(named: "img_return_right")
        }
        case 2: do {
        //    BallLabel.frame.origin.x = Point2Label.frame.origin.x
            SecondPlayerStetusLabel.text = String(Podacha)+" –ø–æ–¥–∞—á–∞"
        //    FirstPlayerStatusLabel.text = "–ü—Ä–∏–µ–º"
        //    Win2Button.setTitle("–≠–π—Å", for: .normal)
        //    Win1Button.setTitle("–í–∏–Ω–Ω–µ—Ä", for: .normal)
        //    SecondPlayerImage.image = UIImage(named: "img_serve_right")
        //    FirstPlayerImage.image = UIImage(named: "img_return_left")
        }
        default: BallLabel.frame.origin.x = Point1Label.frame.origin.x
        }
        
                
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        BallLabel.translatesAutoresizingMaskIntoConstraints = true // —á—Ç–æ–± –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–≤–∏–≥–∞—Ç—å –º–µ—Ç–∫—É
        BallLabel.frame.origin.x = Point1Label.frame.origin.x + Point1Label.frame.width - 30 // –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –º—è—á–∏–∫–∏ –ø–µ—Ä–≤–æ–º—É –∏–≥—Ä–æ–∫—É
        UpdatePoints()
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        // –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Å–Ω—É–ª—Å—è —ç–∫—Ä–∞–Ω–∞
        super.touchesBegan(touches, with: event)
        view.endEditing(true) // —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        // –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–≥–æ—Ç–æ–≤–æ"
        textField.resignFirstResponder()
        return true
    }
    
    @IBAction func Win1ButtonPress(_ sender: Any) {
        // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–±–µ–¥—ã 1-–≥–æ –∏–≥—Ä–æ–∫–∞
        ChangePoints(p1: 1, p2: 0)
        UpdatePoints()
    }
    
    @IBAction func Lose1ButtonPress(_ sender: Any) {
        // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–∞ 1-–≥–æ –∏–≥—Ä–æ–∫–∞
        if (PodaetNow == 1) && (Podacha == 1) { // –µ—Å–ª–∏ –ø–æ–¥–∞–µ—Ç 1-–π –∏ –æ—à–∏–±–∫–∞ –Ω–∞ –ø–æ–¥–∞—á–µ —Ç–æ
            Podacha = 2 // 2-—è –ø–æ–¥–∞—á–∞
        }
        else {
            ChangePoints(p1: 0, p2: 1) // –æ—à–∏–±–∫–∞ –Ω–∞ 2-–π –ø–æ–¥–∞—á–µ = –≤—ã–∏–≥—Ä–∞–Ω–Ω–æ–µ –æ—á–∫–æ
        }
        UpdatePoints()
    }
    
    @IBAction func Win2ButtonPress(_ sender: Any) {
        // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–±–µ–¥—ã 2-–≥–æ –∏–≥—Ä–æ–∫–∞
        ChangePoints(p1: 0, p2: 1)
        UpdatePoints()
    }
    
    @IBAction func Lose2ButtonPress(_ sender: Any) {
        // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–∞ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
        if (PodaetNow == 2) && (Podacha == 1) { // –µ—Å–ª–∏ –ø–æ–¥–∞–µ—Ç 2-–π –∏ –æ—à–∏–±–∫–∞ –Ω–∞ –ø–æ–¥–∞—á–µ —Ç–æ
            Podacha = 2 // 2-—è –ø–æ–¥–∞—á–∞
        }
        else {
            ChangePoints(p1: 1, p2: 0)
        }
        UpdatePoints()
    }
}

